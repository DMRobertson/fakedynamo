package conditionexpression

type parser Peg {

}

ConditionExpression <- MAYBE_SP Condition MAYBE_SP END

# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ExpressionAttributeNames.html
ExpressionAttributeName <- '#' [a-zA-Z_]+

# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Attributes.html
RawAttribute <- [a-zA-Z] [a-zA-Z0-9]*

Name <- RawAttribute / ExpressionAttributeName
ListDereference <- '[' [0-9]+ ']'
MapDereference <- '.' Name
DocumentPath <- Name (ListDereference / MapDereference)*

# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ExpressionAttributeValues.html
ExpressionAttributeValue <- ':' [a-zA-Z0-9_]+

# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.OperatorsAndFunctions.html#Expressions.OperatorsAndFunctions.Syntax

Operand <- Size / DocumentPath / ExpressionAttributeValue
Size <- 'size' MAYBE_SP '(' MAYBE_SP DocumentPath MAYBE_SP ')'

Comparison <- Operand MAYBE_SP Comparator MAYBE_SP Operand
Comparator <- '=' / '<>' / '<=' / '<' / '>=' / '>'

Range <- Operand SP 'BETWEEN' SP Operand SP 'AND' SP Operand
Membership <- Operand SP 'IN' MAYBE_SP '(' MAYBE_SP Operand (MAYBE_SP ',' MAYBE_SP Operand MAYBE_SP)+ ')'

FunctionReturningBool <- AttributeExists / AttributeNotExists / AttributeType / BeginsWith / Contains

AttributeExists <- 'attribute_exists' MAYBE_SP '(' MAYBE_SP DocumentPath MAYBE_SP ')'
AttributeNotExists <- 'attribute_not_exists' MAYBE_SP '(' MAYBE_SP DocumentPath MAYBE_SP ')'
AttributeType <-
    'attribute_type' MAYBE_SP '(' MAYBE_SP
        DocumentPath MAYBE_SP ',' MAYBE_SP ExpressionAttributeValue
    MAYBE_SP ')'
BeginsWith <-
    'begins_with' MAYBE_SP '(' MAYBE_SP
        DocumentPath MAYBE_SP ',' MAYBE_SP ExpressionAttributeValue
    MAYBE_SP ')'
Contains <-
    'contains' MAYBE_SP '(' MAYBE_SP
        DocumentPath MAYBE_SP ',' MAYBE_SP Operand
    MAYBE_SP ')'

Condition <- Disjunct (SP OR SP Disjunct)*
Disjunct <- Conjunct (SP AND SP Conjunct)*
Conjunct <-
      Negation
    / '(' MAYBE_SP BooleanAtom MAYBE_SP ')'
    / BooleanAtom
Negation <- 'NOT' SP BooleanAtom

BooleanAtom <-
      FunctionReturningBool
    / Range
    / Membership
    / Contains
    / Comparison

AND <- 'AND' / 'and'
OR <- 'OR' / 'or'

MAYBE_SP <- ' '*
SP <- ' '+
END <- !.
